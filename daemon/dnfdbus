#!/usr/bin/python3
#    Copyright (C) 2021 Tim Lauridsen < tla[at]rasmil.dk >
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to
#    the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

# dnf dBus service

import logging
import argparse

from dasbus.loop import EventLoop

from dnfdbus.misc import do_log_setup, log
from dnfdbus.server import DnfDbus, DnfDbusInterface, SYSTEM_BUS, DNFDBUS

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Dnf D-Bus Daemon')
    parser.add_argument('-v', '--verbose', action='store_true')
    parser.add_argument('-d', '--debug', action='store_true')
    args = parser.parse_args()
    if args.verbose:
        if args.debug:
            do_log_setup(logroot='dnfdbus', loglvl=logging.DEBUG)
        else:
            do_log_setup(logroot='dnfdbus')
    try:
        loop = EventLoop()

        log.info(f'Starting {DNFDBUS.object_path} : {DNFDBUS.service_name}')
        SYSTEM_BUS.publish_object(
            DNFDBUS.object_path, DnfDbusInterface(DnfDbus(loop)))
        SYSTEM_BUS.register_service(DNFDBUS.service_name)
        loop.run()
    finally:
        SYSTEM_BUS.disconnect()
